{"version":3,"sources":["components/Navbar.jsx","components/Categories.jsx","components/Business.jsx","components/Listing.jsx","components/User.jsx","MainPage.jsx","components/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","style","boxShadow","transition","href","src","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","padding","fontWeight","textDecoration","color","textTransform","fontSize","exact","Categories","addSubmit","e","preventDefault","props","addCategories","categaoriesInput","value","toLowerCase","data","map","item","console","log","categories","textAlign","onSubmit","this","htmlFor","placeholder","ref","Component","Business","state","active","show","submitBusiness","addBusiness","nameInput","decriptionInput","phoneInput","emailInput","websiteInput","localStorage","getItem","concat","imageInput","setItem","setState","appendCategories","changeCatergory","target","changeCatergory2","optionItems","index","key","categoryInput","onChange","required","marginTop","onClick","Listing","counter","shows","handleopen","event","handleClose","onDelete","name","onUpdate","updatedData","list","description","descriptionInput","phone","email","websiteURL","imageURL","JSON","stringify","category","listingData","scope","bind","length","Modal","onHide","Header","closeButton","Title","Body","Form","Alert","variant","Heading","Button","Group","controlId","Label","Control","defaultValue","Footer","User","searchString","businesLists","parse","handleChange","searching","trim","filter","match","MainPage","categoriesList","push","businessEntry","filteredItem","getBusinessList","getCategories","data2","Login","error","loggedIn","loginSubmit","history","password","passwordInput","paddingTop","height","role","withRouter","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.823a6259.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nfunction Navbar() {\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <nav\r\n          className=\"navbar navbar-expand-lg fixed-top\"\r\n          style={{\r\n            boxShadow: \"0 0.5rem 2rem rgba(0,0,0,0.1)\",\r\n            transition: \"background 0.2s ease-out 0s\"\r\n          }}\r\n        >\r\n          <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              <img src=\"img/img.png\" width={50} />\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler navbar-toggler-right\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <i className=\"fas fa-bars\" />\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    to=\"/admin\"\r\n                    style={{\r\n                      padding: \"0.5rem 1rem\",\r\n                      fontWeight: 400,\r\n                      textDecoration: \"none\",\r\n                      color: \"#2e3349\",\r\n                      textTransform: \"uppercase\",\r\n                      fontSize: \"0.85rem\",\r\n                      fontWeight: \"bold\",\r\n                      letterSpacing: \"0.1em\",\r\n                      transition: \"all 0.3s\"\r\n                    }}\r\n                    exact\r\n                  >\r\n                    <span>Admin</span>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      to=\"/user\"\r\n                      style={{\r\n                        padding: \"0.5rem 1rem\",\r\n                        fontWeight: 400,\r\n                        textDecoration: \"none\",\r\n                        color: \"#2e3349\",\r\n                        textTransform: \"uppercase\",\r\n                        fontSize: \"0.85rem\",\r\n                        fontWeight: \"bold\",\r\n                        letterSpacing: \"0.1em\",\r\n                        transition: \"all 0.3s\"\r\n                      }}\r\n                      exact\r\n                    >\r\n                      <span>User</span>\r\n                    </NavLink>\r\n                  </li>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <br />\r\n      <br />\r\n\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Categories extends Component {\r\n  addSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addCategories(this.categaoriesInput.value.toLowerCase());\r\n    this.categaoriesInput.value = \"\";\r\n\r\n    this.props.data.map(item => {\r\n      console.log(item.categories);\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className=\"bg-light\" id=\"about\">\r\n          <div className=\"container\" style={{ textAlign: \"\" }}>\r\n            <header className=\"mb-5 pb-4\">\r\n              <h2 className=\"font-weight-bold text-primary text-uppercase lined letter-spacing-3\">\r\n                Add Categories\r\n              </h2>\r\n            </header>\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Business Directory App</div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Add Categories</h5>\r\n                <p className=\"card-text\">\r\n                  Kindly add the Category of businesses in the field below\r\n                </p>\r\n                <form className=\"form-inline\" onSubmit={this.addSubmit}>\r\n                  <label className=\"sr-only\" htmlFor=\"inlineFormInputName2\">\r\n                    Category:\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control mb-2 mr-sm-2\"\r\n                    id=\"inlineFormInputName2\"\r\n                    placeholder=\"Web\"\r\n                    ref={categaoriesInput =>\r\n                      (this.categaoriesInput = categaoriesInput)\r\n                    }\r\n                  />\r\n\r\n                  <button className=\"btn btn-primary mb-2\">Submit</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Categories;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Business extends Component {\r\n  state = {\r\n    active: true,\r\n    show: true\r\n  };\r\n  submitBusiness = e => {\r\n    //console.log();\r\n    e.preventDefault();\r\n    this.props.addBusiness(\r\n      this.nameInput.value,\r\n      this.decriptionInput.value,\r\n      this.phoneInput.value,\r\n      this.emailInput.value,\r\n      this.websiteInput.value,\r\n      (localStorage.getItem(\"ChangeCategories\") || \"\").concat(\r\n        \" \",\r\n        localStorage.getItem(\"ChangeCategory\") || \"\"\r\n      ),\r\n      this.imageInput.value\r\n    );\r\n    this.nameInput.value = \"\";\r\n    this.decriptionInput.value = \"\";\r\n    this.phoneInput.value = \"\";\r\n    this.emailInput.value = \"\";\r\n    this.websiteInput.value = \"\";\r\n    localStorage.setItem(\"ChangeCategories\", \"-\");\r\n    this.imageInput.value = \"\";\r\n\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  appendCategories = () => {\r\n    this.setState({ active: !this.state.active });\r\n  };\r\n\r\n  changeCatergory = e => {\r\n    localStorage.setItem(\"ChangeCategories\", e.target.value);\r\n  };\r\n\r\n  changeCatergory2 = e => {\r\n    localStorage.setItem(\"ChangeCategory\", e.target.value);\r\n  };\r\n\r\n  render() {\r\n    let optionItems = this.props.categories.map((item, index) => {\r\n      return (\r\n        <option\r\n          key={index}\r\n          value={item.categories}\r\n          ref={categoryInput => (this.categoryInput = categoryInput)}\r\n        >\r\n          {item.categories}\r\n        </option>\r\n      );\r\n    });\r\n    return (\r\n      <>\r\n        <section id=\"expertise\">\r\n          <div className=\"container\">\r\n            <header className=\"mb-5 pb-4\">\r\n              <h2 className=\"font-weight-bold text-primary text-uppercase lined letter-spacing-3\">\r\n                Add Business\r\n              </h2>\r\n            </header>\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Business Directory App</div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Create Business</h5>\r\n                <p className=\"card-text\">\r\n                  Kindly add the Category of businesses in the field below{\" \"}\r\n                </p>\r\n                <form onSubmit={this.submitBusiness}>\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">\r\n                      Business Name\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"\"\r\n                        placeholder=\"Business Name\"\r\n                        ref={nameInput => (this.nameInput = nameInput)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">\r\n                      Description\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"\"\r\n                        placeholder=\"Description\"\r\n                        ref={decriptionInput =>\r\n                          (this.decriptionInput = decriptionInput)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">\r\n                      Phone Number\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"\"\r\n                        placeholder=\"Phone\"\r\n                        ref={phoneInput => (this.phoneInput = phoneInput)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">\r\n                      Email\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"\"\r\n                        placeholder=\"Email\"\r\n                        ref={emailInput => (this.emailInput = emailInput)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">\r\n                      Website URL\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"\"\r\n                        placeholder=\"Website URL\"\r\n                        ref={websiteInput => (this.websiteInput = websiteInput)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">\r\n                      Categories\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <select onChange={this.changeCatergory} required>\r\n                        {!this.state.show ? <option> - </option> : null}\r\n                        <option> - </option>\r\n                        {optionItems}\r\n                      </select>{\" \"}\r\n                      {\"   \"} {localStorage.setItem(\"ChangeCategory\", \"\")}\r\n                      {!this.state.active ? (\r\n                        <>\r\n                          {\" \"}\r\n                          {\"   \"}{\" \"}\r\n                          <p style={{ marginTop: \"20px\", fontWeight: 700 }}>\r\n                            Add other category :{\" \"}\r\n                          </p>\r\n                          {\"  \"}\r\n                          <select onChange={this.changeCatergory2} required>\r\n                            <option> - </option>\r\n                            {optionItems}\r\n                          </select>{\" \"}\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={this.appendCategories}\r\n                        className={\r\n                          this.state.active ? \"btn btn-info\" : \"btn btn-danger\"\r\n                        }\r\n                      >\r\n                        <b>{this.state.active ? \"+\" : \"-\"} </b>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label\r\n                      htmlFor=\"inputPassword3\"\r\n                      className=\"col-sm-2 col-form-label\"\r\n                    >\r\n                      Image URL\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputPassword3\"\r\n                        placeholder=\"Website URL\"\r\n                        ref={imageInput => (this.imageInput = imageInput)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <div className=\"col-sm-10\">\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nclass Listing extends Component {\r\n  state = {\r\n    show: false,\r\n    counter: 0,\r\n    active: true,\r\n    shows: false\r\n  };\r\n\r\n  appendCategories = () => {\r\n    this.setState({ active: !this.state.active });\r\n  };\r\n\r\n  changeCatergory = e => {\r\n    localStorage.setItem(\"ChangeCategories\", e.target.value);\r\n  };\r\n\r\n  changeCatergory2 = e => {\r\n    localStorage.setItem(\"ChangeCategory\", e.target.value);\r\n  };\r\n\r\n  handleopen = event => {\r\n    let counter = event;\r\n    this.setState({\r\n      show: true,\r\n      counter\r\n    });\r\n    //console.log(this.state.datacounter);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  onDelete = name => {\r\n    this.props.onDelete(name);\r\n  };\r\n\r\n  onUpdate = e => {\r\n    e.preventDefault();\r\n\r\n    let updatedData = this.props.list;\r\n\r\n    updatedData.map(item => {\r\n      if (item.name === this.props.list[this.state.counter].name) {\r\n        item.name = this.nameInput.value;\r\n        item.description = this.descriptionInput.value;\r\n        item.phone = this.phoneInput.value;\r\n        item.email = this.emailInput.value;\r\n        item.websiteURL = this.websiteInput.value;\r\n        item.categories = this.categoryInput.value;\r\n        item.imageURL = this.imageInput.value;\r\n      }\r\n    });\r\n\r\n    this.setState({ shows: true });\r\n\r\n    localStorage.setItem(\"BusinessList\", JSON.stringify(updatedData));\r\n  };\r\n  render() {\r\n    let optionItems = this.props.category.map((item, index) => {\r\n      return (\r\n        <option\r\n          key={index}\r\n          value={item.categories}\r\n          ref={categoryInput => (this.categoryInput = categoryInput)}\r\n        >\r\n          {item.categories}\r\n        </option>\r\n      );\r\n    });\r\n\r\n    let listingData = this.props.list.map((item, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <th scope=\"row\">{index + 1}</th>\r\n          <td>{item.name}</td>\r\n          <td>{item.description}</td>\r\n          <td>{item.phone}</td>\r\n          <td>{item.email}</td>\r\n          <td>{item.websiteURL}</td>\r\n          <td>{item.categories}</td>\r\n          <td> {item.imageURL}</td>\r\n          <td>\r\n            {\" \"}\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={this.onDelete.bind(this, index)}\r\n            >\r\n              Delete\r\n            </button>\r\n            {\"   \"} {\"       \"}\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={this.handleopen.bind(this, index)}\r\n            >\r\n              Edit\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <>\r\n        <section className=\"bg-light\" id=\"about\">\r\n          <div className=\"container\" style={{ textAlign: \"\" }}>\r\n            <header className=\"mb-5 pb-4\">\r\n              <h2 className=\"font-weight-bold text-primary text-uppercase lined letter-spacing-3\">\r\n                Business Listing\r\n              </h2>\r\n            </header>\r\n            <table className=\"table table-hover table-responsive-md\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Phone Number</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Website URL</th>\r\n                  <th scope=\"col\">Categories</th>\r\n                  <th scope=\"col\">Image</th>\r\n                  <th scope=\"col\">Action(s)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{listingData.length ? listingData : \"No Data\"}</tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {listingData.length ? (\r\n            <Modal show={this.state.show} onHide={this.handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Updates</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form onSubmit={this.onUpdate}>\r\n                  {this.state.shows && (\r\n                    <Alert show={this.state.shows} variant=\"success\">\r\n                      <Alert.Heading>Updated</Alert.Heading>\r\n                      <p>\r\n                        <em>Thank you ! </em> for updating the content.\r\n                        <p> Close the form to see the updates</p>\r\n                      </p>\r\n                      <hr />\r\n                      <div className=\"d-flex justify-content-end\">\r\n                        <Button\r\n                          onClick={() => this.setState({ shows: false })}\r\n                          variant=\"outline-success\"\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    </Alert>\r\n                  )}\r\n                  <Form.Group controlId=\"formBasicName\">\r\n                    <Form.Label>Business Name</Form.Label>\r\n\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Business Name\"\r\n                      name=\"bussinessname\"\r\n                      ref={nameInput => (this.nameInput = nameInput)}\r\n                      defaultValue={\r\n                        this.props.list[this.state.counter].name || \"\"\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasictext\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Description\"\r\n                      name=\"Description\"\r\n                      ref={descriptionInput =>\r\n                        (this.descriptionInput = descriptionInput)\r\n                      }\r\n                      defaultValue={\r\n                        this.props.list[this.state.counter].description || \" \"\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasictext\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Phone Number\"\r\n                      name=\"phone\"\r\n                      ref={phoneInput => (this.phoneInput = phoneInput)}\r\n                      defaultValue={\r\n                        this.props.list[this.state.counter].phone || \"\"\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasictext\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      ref={emailInput => (this.emailInput = emailInput)}\r\n                      defaultValue={\r\n                        this.props.list[this.state.counter].email || \"\"\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasictext\">\r\n                    <Form.Label>Website URL </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Website URL\"\r\n                      name=\"website URL\"\r\n                      ref={websiteInput => (this.websiteInput = websiteInput)}\r\n                      defaultValue={\r\n                        this.props.list[this.state.counter].websiteURL || \"\"\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">\r\n                      Categories\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <select onChange={this.changeCatergory} required>\r\n                        {!this.state.show ? <option> - </option> : null}\r\n                        <option> - </option>\r\n                        {optionItems}\r\n                      </select>{\" \"}\r\n                      {\"   \"} {localStorage.setItem(\"ChangeCategory\", \"\")}\r\n                      {!this.state.active ? (\r\n                        <>\r\n                          {\" \"}\r\n                          {\"   \"}{\" \"}\r\n                          <p style={{ marginTop: \"20px\", fontWeight: 700 }}>\r\n                            Add other category :{\" \"}\r\n                          </p>\r\n                          {\"  \"}\r\n                          <select onChange={this.changeCatergory2} required>\r\n                            <option> - </option>\r\n                            {optionItems}\r\n                          </select>{\" \"}\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={this.appendCategories}\r\n                        className={\r\n                          this.state.active ? \"btn btn-info\" : \"btn btn-danger\"\r\n                        }\r\n                      >\r\n                        <b>{this.state.active ? \"+\" : \"-\"} </b>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Form.Group controlId=\"formBasictext\">\r\n                    <Form.Label>Image URL </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Image URL\"\r\n                      name=\"imageurl\"\r\n                      ref={imageInput => (this.imageInput = imageInput)}\r\n                      defaultValue={\r\n                        this.props.list[this.state.counter].imageURL || \"\"\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button\r\n                    variant=\"success\"\r\n                    type=\"submit\"\r\n                    onSubmit={this.onUpdate}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer></Modal.Footer>\r\n            </Modal>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Listing;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass User extends Component {\r\n  state = {\r\n    searchString: \"\",\r\n    businesLists: JSON.parse(localStorage.getItem(\"BusinessList\")) || []\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchString: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let searching = this.state.businesLists,\r\n      searchString = this.state.searchString.trim().toLowerCase();\r\n    if (searchString.length > 0) {\r\n      searching = searching.filter(item => {\r\n        return (\r\n          item.name.toLowerCase().match(searchString) ||\r\n          item.description.toLowerCase().match(searchString)\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <section className=\"bg-light\" id=\"about\">\r\n          <div className=\"container\" style={{ textAlign: \"\" }}>\r\n            <header className=\"mb-5 pb-4\">\r\n              <h2 className=\"font-weight-bold text-primary text-uppercase lined letter-spacing-3\">\r\n                Users Page\r\n              </h2>\r\n            </header>\r\n\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                id=\"inlineFormInputName2\"\r\n                placeholder=\"Search...\"\r\n                value={this.state.searchString}\r\n                onChange={this.handleChange}\r\n              />\r\n              <span>\r\n                Searches are filtered via Name and Description column of the\r\n                table\r\n              </span>\r\n            </>\r\n            <table className=\"table table-hover table-responsive-md\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Phone Number</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Website URL</th>\r\n                  <th scope=\"col\">Categories</th>\r\n                  <th scope=\"col\">Image</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {searching.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <th scope=\"row\">{index + 1}</th>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.description}</td>\r\n                      <td>{item.phone}</td>\r\n                      <td>{item.email}</td>\r\n                      <td>{item.websiteURL}</td>\r\n                      <td>{item.categories}</td>\r\n                      <td> {item.imageURL}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Categories from \"./components/Categories\";\r\nimport Business from \"./components/Business\";\r\nimport Listing from \"./components/Listing\";\r\nimport User from \"./components/User\";\r\n\r\nexport default class MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      businesLists: JSON.parse(localStorage.getItem(\"BusinessList\")) || [],\r\n      categoriesList: JSON.parse(localStorage.getItem(\"CategoriesList\")) || []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const businesLists = this.getBusinessList();\r\n    this.setState({\r\n      businesLists\r\n    });\r\n\r\n    const categoriesList = this.getCategories();\r\n    this.setState({\r\n      categoriesList\r\n    });\r\n  }\r\n\r\n  addCategories = categories => {\r\n    const data = this.state.categoriesList;\r\n\r\n    data.push({\r\n      categories\r\n    });\r\n    this.setState({ categoriesList: data });\r\n    localStorage.setItem(\"CategoriesList\", JSON.stringify(data));\r\n  };\r\n\r\n  addBusiness = (\r\n    name,\r\n    description,\r\n    phone,\r\n    email,\r\n    websiteURL,\r\n    categories,\r\n    imageURL\r\n  ) => {\r\n    let businessEntry = this.state.businesLists;\r\n\r\n    businessEntry.push({\r\n      name,\r\n      description,\r\n      phone,\r\n      email,\r\n      websiteURL,\r\n      categories,\r\n      imageURL\r\n    });\r\n    this.setState({ businesLists: businessEntry });\r\n    localStorage.setItem(\"BusinessList\", JSON.stringify(businessEntry));\r\n  };\r\n\r\n  getBusinessList() {\r\n    return this.state.businesLists;\r\n  }\r\n\r\n  getCategories() {\r\n    return this.state.categoriesList;\r\n  }\r\n\r\n  onDelete = id => {\r\n    const getBussiness = this.getBusinessList();\r\n\r\n    const filteredItem = getBussiness.filter((item, index) => {\r\n      return index !== id;\r\n    });\r\n    console.log(filteredItem);\r\n\r\n    this.setState({ businesLists: filteredItem });\r\n    localStorage.setItem(\"BusinessList\", JSON.stringify(filteredItem));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <Login /> */}\r\n        <Navbar />\r\n        <Categories\r\n          data={this.state.businesLists}\r\n          addCategories={this.addCategories}\r\n        />\r\n        <Business\r\n          categories={this.state.categoriesList}\r\n          addBusiness={this.addBusiness}\r\n          data2={this.state.businesLists}\r\n        />\r\n        <Listing\r\n          list={this.state.businesLists}\r\n          category={this.state.categoriesList}\r\n          onDelete={this.onDelete}\r\n          onUpdate={this.onUpdate}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./componentStyle/Login.css\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    error: false,\r\n    loggedIn: false\r\n  };\r\n\r\n  loginSubmit = e => {\r\n    const { history } = this.props;\r\n    e.preventDefault();\r\n\r\n    let email = this.emailInput.value.trim().toLowerCase();\r\n    let password = this.passwordInput.value.trim();\r\n\r\n    if (!(email === \"admin@email.com\" && password === \"@Password123\")) {\r\n      return this.setState({ error: true, loggedIn: false });\r\n    }\r\n\r\n    history.push(\"/admin\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main style={{ paddingTop: \"130px\" }}>\r\n        <form className=\"form-signin\" onSubmit={this.loginSubmit.bind(this)}>\r\n          <img className=\"mb-4\" src=\"img/img.png\" width={90} height={90} />\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please Sign in</h1>\r\n          {this.state.error ? (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              That username/password is incorrect. Try again!\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <label htmlFor=\"inputEmail\" className=\"sr-only\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"inputEmail\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email address\"\r\n            required\r\n            ref={emailInput => (this.emailInput = emailInput)}\r\n          />\r\n          <label htmlFor=\"inputPassword\" className=\"sr-only\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"inputPassword\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            required\r\n            ref={passwordInput => (this.passwordInput = passwordInput)}\r\n          />\r\n\r\n          <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n            Sign in\r\n          </button>\r\n        </form>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from \"react\";\nimport MainPage from \"./MainPage\";\nimport Login from \"./components/Login\";\nimport User from \"./components/User\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/admin\" component={MainPage} />\n            <Route exact path=\"/user\" component={User} />\n            <Redirect to=\"/\" />\n          </Switch>\n\n          {/* <MainPage /> */}\n        </Router>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}